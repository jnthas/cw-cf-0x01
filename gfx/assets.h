#ifndef Assets_h
#define Assets_h

#include <Arduino.h>


const unsigned short BLOCK[361]  = {
0xF81F, 0x9A40, 0x9A40, 0x9A40, 0x9A40, 0x9A40, 0x9A40, 0x9A40, 0x9A40, 0x9A40, 0x9A40, 0x9A40, 0x9A40, 0x9A40, 0x9A40, 0x9A40,   // 0x0010 (16) pixels
0x9A40, 0x9A40, 0xF81F, 0x9A40, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4,   // 0x0020 (32) pixels
0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0x0000, 0x9A40, 0xE4E4, 0x0000, 0x0000, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4,   // 0x0030 (48) pixels
0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0x0000, 0x0000, 0xE4E4, 0x0000, 0x9A40, 0xE4E4, 0x0000, 0x0000, 0xE4E4, 0xE4E4, 0xE4E4,   // 0x0040 (64) pixels
0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0x0000, 0x0000, 0xE4E4, 0x0000, 0x9A40, 0xE4E4, 0xE4E4, 0xE4E4,   // 0x0050 (80) pixels
0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0x0000, 0x9A40,   // 0x0060 (96) pixels
0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4,   // 0x0070 (112) pixels
0xE4E4, 0x0000, 0x9A40, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4,   // 0x0080 (128) pixels
0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0x0000, 0x9A40, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4,   // 0x0090 (144) pixels
0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0x0000, 0x9A40, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4,   // 0x00A0 (160) pixels
0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0x0000, 0x9A40, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4,   // 0x00B0 (176) pixels
0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0x0000, 0x9A40, 0xE4E4,   // 0x00C0 (192) pixels
0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4,   // 0x00D0 (208) pixels
0x0000, 0x9A40, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4,   // 0x00E0 (224) pixels
0xE4E4, 0xE4E4, 0xE4E4, 0x0000, 0x9A40, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4,   // 0x00F0 (240) pixels
0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0x0000, 0x9A40, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4,   // 0x0100 (256) pixels
0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0x0000, 0x9A40, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4,   // 0x0110 (272) pixels
0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0x0000, 0x9A40, 0xE4E4, 0x0000,   // 0x0120 (288) pixels
0x0000, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0x0000, 0x0000, 0xE4E4, 0x0000,   // 0x0130 (304) pixels
0x9A40, 0xE4E4, 0x0000, 0x0000, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0x0000,   // 0x0140 (320) pixels
0x0000, 0xE4E4, 0x0000, 0x9A40, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4,   // 0x0150 (336) pixels
0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0xE4E4, 0x0000, 0xF81F, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0160 (352) pixels
};

const byte BLOCK_SIZE[2]  = {19, 19};


const unsigned short BUSH[189] ={
0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0x0000, 0x0000, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F,   // 0x0010 (16) pixels
0xF81F, 0x0000, 0x0000, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0x0000, 0xBFE3, 0xBFE3, 0x0000,   // 0x0020 (32) pixels
0xF81F, 0x0000, 0xF81F, 0xF81F, 0xF81F, 0x0000, 0xBFE3, 0xBFE3, 0x0000, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F,   // 0x0030 (48) pixels
0x0000, 0xBFE3, 0xBFE3, 0xBFE3, 0xBFE3, 0x0000, 0xBFE3, 0x0000, 0xF81F, 0x0000, 0xBFE3, 0xBFE3, 0xBFE3, 0xBFE3, 0x0000, 0xF81F,   // 0x0040 (64) pixels
0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0x0000, 0xBFE3, 0xBFE3, 0xBFE3, 0x0560, 0xBFE3, 0xBFE3, 0x0000, 0xF81F, 0x0000, 0xBFE3,   // 0x0050 (80) pixels
0xBFE3, 0xBFE3, 0x0560, 0xBFE3, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0x0000, 0xBFE3, 0x0560, 0x0560, 0xBFE3, 0xBFE3, 0x0560,   // 0x0060 (96) pixels
0xBFE3, 0xBFE3, 0x0000, 0xBFE3, 0x0560, 0x0560, 0xBFE3, 0xBFE3, 0x0560, 0xF81F, 0xF81F, 0xF81F, 0x0000, 0x0000, 0xBFE3, 0x0560,   // 0x0070 (112) pixels
0xBFE3, 0xBFE3, 0xBFE3, 0xBFE3, 0xBFE3, 0xBFE3, 0xBFE3, 0xBFE3, 0x0560, 0xBFE3, 0xBFE3, 0xBFE3, 0xBFE3, 0xBFE3, 0xF81F, 0xF81F,   // 0x0080 (128) pixels
0x0000, 0xBFE3, 0xBFE3, 0xBFE3, 0xBFE3, 0xBFE3, 0xBFE3, 0xBFE3, 0xBFE3, 0xBFE3, 0xBFE3, 0xBFE3, 0xBFE3, 0xBFE3, 0xBFE3, 0xBFE3,   // 0x0090 (144) pixels
0xBFE3, 0xBFE3, 0xBFE3, 0xF81F, 0xF81F, 0x0000, 0xBFE3, 0xBFE3, 0xBFE3, 0xBFE3, 0xBFE3, 0xBFE3, 0xBFE3, 0xBFE3, 0xBFE3, 0xBFE3,   // 0x00A0 (160) pixels
0xBFE3, 0xBFE3, 0xBFE3, 0xBFE3, 0xBFE3, 0xBFE3, 0xBFE3, 0xBFE3, 0xF81F, 0x0000, 0xBFE3, 0xBFE3, 0xBFE3, 0xBFE3, 0xBFE3, 0xBFE3,   // 0x00B0 (176) pixels
0xBFE3, 0xBFE3, 0xBFE3, 0xBFE3, 0xBFE3, 0xBFE3, 0xBFE3, 0xBFE3, 0xBFE3, 0xBFE3, 0xBFE3, 0xBFE3, 0xBFE3 };

const unsigned short CLOUD1[156] ={
0xF81F, 0x0000, 0x0000, 0x0000, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0x0000, 0xFFFF, 0xFFFF,   // 0x0010 (16) pixels
0xFFFF, 0x0000, 0x0000, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x0020 (32) pixels
0x0000, 0xF81F, 0x0000, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xFFFF, 0x3DFF, 0xFFFF, 0xFFFF, 0x3DFF, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF,   // 0x0030 (48) pixels
0x0000, 0xF81F, 0xF81F, 0xF81F, 0x3DFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0xF81F,   // 0x0040 (64) pixels
0xF81F, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0xF81F, 0xFFFF, 0xFFFF,   // 0x0050 (80) pixels
0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0xF81F, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x0060 (96) pixels
0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0xF81F, 0xF81F, 0xFFFF, 0xFFFF, 0xFFFF, 0x3DFF, 0x3DFF, 0xFFFF, 0x3DFF, 0xFFFF,   // 0x0070 (112) pixels
0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0xF81F, 0x3DFF, 0x3DFF, 0x3DFF, 0xFFFF, 0xFFFF, 0x3DFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000,   // 0x0080 (128) pixels
0xF81F, 0xF81F, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0x0000,   // 0x0090 (144) pixels
0x0000, 0xF81F, 0x0000, 0x0000, 0x0000, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F };

const unsigned short CLOUD2[156] ={
0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0x0000, 0x0000, 0x0000, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F,   // 0x0010 (16) pixels
0xF81F, 0xF81F, 0xF81F, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F,   // 0x0020 (32) pixels
0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0x0000, 0xFFFF, 0x3DFF, 0xFFFF,   // 0x0030 (48) pixels
0xFFFF, 0x3DFF, 0xFFFF, 0xFFFF, 0xF81F, 0xF81F, 0xF81F, 0x0000, 0x0000, 0xFFFF, 0x3DFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x0040 (64) pixels
0xFFFF, 0xF81F, 0xF81F, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xF81F, 0x0000,   // 0x0050 (80) pixels
0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xF81F, 0xFFFF, 0xFFFF, 0xFFFF, 0x3DFF,   // 0x0060 (96) pixels
0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xF81F, 0xF81F, 0x0000, 0xFFFF, 0xFFFF, 0x3DFF, 0xFFFF, 0xFFFF,   // 0x0070 (112) pixels
0xFFFF, 0x3DFF, 0x3DFF, 0xFFFF, 0x3DFF, 0xF81F, 0xF81F, 0xF81F, 0x0000, 0xFFFF, 0xFFFF, 0x3DFF, 0x3DFF, 0x3DFF, 0xFFFF, 0xFFFF,   // 0x0080 (128) pixels
0x3DFF, 0xFFFF, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0xF81F,   // 0x0090 (144) pixels
0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0x0000, 0x0000, 0xF81F, 0x0000, 0x0000, 0x0000, 0xF81F };

const unsigned short GROUND[64] ={
0xE2C2, 0xF6B6, 0xF6B6, 0xF6B6, 0x0000, 0xE2C2, 0xF6B6, 0xE2C2, 0xF6B6, 0xE2C2, 0xE2C2, 0xE2C2, 0x0000, 0xF6B6, 0xE2C2, 0x0000,   // 0x0010 (16) pixels
0xF6B6, 0xE2C2, 0xE2C2, 0xE2C2, 0x0000, 0xE2C2, 0x0000, 0xE2C2, 0x0000, 0xE2C2, 0xE2C2, 0xE2C2, 0x0000, 0xF6B6, 0xF6B6, 0x0000,   // 0x0020 (32) pixels
0xF6B6, 0x0000, 0x0000, 0xE2C2, 0x0000, 0xF6B6, 0xE2C2, 0x0000, 0xF6B6, 0xF6B6, 0xF6B6, 0x0000, 0xF6B6, 0xE2C2, 0xE2C2, 0x0000,   // 0x0030 (48) pixels
0xF6B6, 0xE2C2, 0xE2C2, 0xF6B6, 0xE2C2, 0xE2C2, 0xE2C2, 0x0000, 0xE2C2, 0x0000, 0x0000, 0xF6B6, 0x0000, 0x0000, 0x0000, 0xE2C2,   // 0x0040 (64) pixels
};


const unsigned short HILL[440] ={
0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F,   // 0x0010 (16) pixels
0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F,   // 0x0020 (32) pixels
0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F,   // 0x0030 (48) pixels
0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F,   // 0x0040 (64) pixels
0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F,   // 0x0050 (80) pixels
0x0000, 0x0000, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F,   // 0x0060 (96) pixels
0xF81F, 0xF81F, 0xF81F, 0xF81F, 0x0560, 0x0560, 0x0000, 0x0000, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F,   // 0x0070 (112) pixels
0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0x0560, 0x0560, 0x0560, 0x0560, 0x0000, 0xF81F, 0xF81F, 0xF81F,   // 0x0080 (128) pixels
0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0x0560, 0x0560, 0x0000, 0x0560,   // 0x0090 (144) pixels
0x0560, 0x0000, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F,   // 0x00A0 (160) pixels
0x0560, 0x0560, 0x0000, 0x0560, 0x0560, 0x0560, 0x0000, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F,   // 0x00B0 (176) pixels
0xF81F, 0xF81F, 0xF81F, 0xF81F, 0x0000, 0x0560, 0x0000, 0x0560, 0x0560, 0x0560, 0x0560, 0x0000, 0xF81F, 0xF81F, 0xF81F, 0xF81F,   // 0x00C0 (192) pixels
0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0x0000, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560,   // 0x00D0 (208) pixels
0x0000, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0x0560, 0x0560, 0x0560, 0x0560,   // 0x00E0 (224) pixels
0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0000, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F,   // 0x00F0 (240) pixels
0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0000, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F,   // 0x0100 (256) pixels
0xF81F, 0xF81F, 0xF81F, 0xF81F, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0000,   // 0x0110 (272) pixels
0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560,   // 0x0120 (288) pixels
0x0560, 0x0560, 0x0560, 0x0560, 0x0000, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0x0560, 0x0560, 0x0560, 0x0560,   // 0x0130 (304) pixels
0x0560, 0x0560, 0x0000, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0000, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F,   // 0x0140 (320) pixels
0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0000, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0000, 0xF81F,   // 0x0150 (336) pixels
0xF81F, 0xF81F, 0xF81F, 0xF81F, 0x0560, 0x0560, 0x0560, 0x0560, 0x0000, 0x0560, 0x0000, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560,   // 0x0160 (352) pixels
0x0560, 0x0560, 0x0560, 0x0000, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0x0560, 0x0560, 0x0560, 0x0560, 0x0000, 0x0560, 0x0560, 0x0560,   // 0x0170 (368) pixels
0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0000, 0xF81F, 0xF81F, 0xF81F, 0x0560, 0x0560, 0x0560, 0x0560,   // 0x0180 (384) pixels
0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0000, 0xF81F, 0xF81F,   // 0x0190 (400) pixels
0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560,   // 0x01A0 (416) pixels
0x0560, 0x0560, 0x0000, 0xF81F, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560,   // 0x01B0 (432) pixels
0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560, 0x0560 };



const unsigned short SKY_COLOR = 0x000E;

const unsigned short _MASK = 0xf81f;

const unsigned short RED = 0xF801;
const unsigned short SKIN = 0xfd28;
const unsigned short SHOES = 0xC300;
const unsigned short SHIRT = 0x7BCF;
const unsigned short HAIR = 0x0000;


// 'mario-idle', 13x16px
const uint16_t MARIO_IDLE [] PROGMEM = {
	_MASK, _MASK, _MASK, RED, RED, RED, RED, RED, RED, _MASK, _MASK, _MASK, _MASK, _MASK, _MASK, RED, 
	RED, RED, RED, RED, RED, RED, RED, RED, RED, _MASK, _MASK, _MASK, HAIR, HAIR, HAIR, SKIN, 
	SKIN, HAIR, SKIN, SKIN, _MASK, _MASK, _MASK, _MASK, HAIR, SKIN, HAIR, SKIN, SKIN, SKIN, HAIR, SKIN, 
	SKIN, SKIN, SKIN, _MASK, _MASK, HAIR, SKIN, HAIR, HAIR, SKIN, SKIN, SKIN, HAIR, SKIN, SKIN, SKIN, 
	SKIN, _MASK, HAIR, HAIR, SKIN, SKIN, SKIN, SKIN, HAIR, HAIR, HAIR, HAIR, HAIR, _MASK, _MASK, _MASK, 
	_MASK, SKIN, SKIN, SKIN, SKIN, SKIN, SKIN, SKIN, SKIN, _MASK, _MASK, _MASK, _MASK, SHIRT, SHIRT, RED, 
	SHIRT, SHIRT, SHIRT, SHIRT, _MASK, _MASK, _MASK, _MASK, _MASK, SHIRT, SHIRT, SHIRT, RED, SHIRT, SHIRT, RED, 
	SHIRT, SHIRT, SHIRT, SHIRT, _MASK, SHIRT, SHIRT, SHIRT, SHIRT, RED, RED, RED, RED, SHIRT, SHIRT, SHIRT, 
	SHIRT, SHIRT, SKIN, SKIN, SHIRT, RED, SKIN, RED, RED, SKIN, RED, SHIRT, SKIN, SKIN, SKIN, SKIN, 
	SKIN, SKIN, RED, RED, RED, RED, RED, RED, SKIN, SKIN, SKIN, SKIN, SKIN, SKIN, RED, RED, 
	RED, RED, RED, RED, RED, RED, SKIN, SKIN, SKIN, _MASK, _MASK, RED, RED, RED, RED, _MASK, 
	RED, RED, RED, RED, _MASK, _MASK, _MASK, SHOES, SHOES, SHOES, SHOES, _MASK, _MASK, _MASK, SHOES, SHOES, 
	SHOES, SHOES, _MASK, SHOES, SHOES, SHOES, SHOES, SHOES, _MASK, _MASK, _MASK, SHOES, SHOES, SHOES, SHOES, SHOES
};



const byte MARIO_IDLE_SIZE[2]  = {13, 16};


// 'mario-jump', 17x16px
const uint16_t MARIO_JUMP [] PROGMEM = {
	_MASK, _MASK, _MASK, _MASK, _MASK, _MASK, _MASK, _MASK, _MASK, _MASK, _MASK, _MASK, _MASK, SKIN, SKIN, SKIN, 
	SKIN, _MASK, _MASK, _MASK, _MASK, _MASK, _MASK, RED, RED, RED, RED, RED, RED, _MASK, SKIN, SKIN, 
	SKIN, SKIN, _MASK, _MASK, _MASK, _MASK, _MASK, RED, RED, RED, RED, RED, RED, RED, RED, RED, 
	SKIN, SKIN, SKIN, _MASK, _MASK, _MASK, _MASK, _MASK, HAIR, HAIR, HAIR, SKIN, SKIN, HAIR, SKIN, SKIN, 
	SHIRT, SHIRT, SHIRT, SHIRT, _MASK, _MASK, _MASK, _MASK, HAIR, SKIN, HAIR, SKIN, SKIN, SKIN, HAIR, SKIN, 
	SKIN, SHIRT, SHIRT, SHIRT, SHIRT, _MASK, _MASK, _MASK, _MASK, HAIR, SKIN, HAIR, HAIR, SKIN, SKIN, SKIN, 
	HAIR, SKIN, SKIN, SKIN, SHIRT, SHIRT, _MASK, _MASK, _MASK, _MASK, HAIR, HAIR, SKIN, SKIN, SKIN, SKIN, 
	HAIR, HAIR, HAIR, HAIR, SHIRT, SHIRT, _MASK, _MASK, _MASK, _MASK, _MASK, _MASK, _MASK, SKIN, SKIN, SKIN, 
	SKIN, SKIN, SKIN, SKIN, SHIRT, SHIRT, _MASK, _MASK, _MASK, _MASK, SHIRT, SHIRT, SHIRT, SHIRT, SHIRT, RED, 
	SHIRT, SHIRT, SHIRT, RED, SHIRT, SHIRT, _MASK, _MASK, _MASK, _MASK, SHIRT, SHIRT, SHIRT, SHIRT, SHIRT, SHIRT, 
	SHIRT, RED, SHIRT, SHIRT, SHIRT, RED, RED, _MASK, SHOES, SHOES, SKIN, SKIN, SHIRT, SHIRT, SHIRT, SHIRT, 
	SHIRT, SHIRT, RED, RED, RED, RED, RED, RED, _MASK, SHOES, SHOES, SKIN, SKIN, SKIN, SKIN, RED, 
	RED, SHIRT, RED, RED, SKIN, RED, RED, SKIN, RED, SHOES, SHOES, SHOES, _MASK, SKIN, SKIN, SHOES, 
	RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, SHOES, SHOES, SHOES, _MASK, _MASK, SHOES, 
	SHOES, SHOES, RED, RED, RED, RED, RED, RED, RED, RED, RED, SHOES, SHOES, SHOES, _MASK, SHOES, 
	SHOES, SHOES, RED, RED, RED, RED, RED, RED, RED, RED, _MASK, _MASK, _MASK, _MASK, _MASK, _MASK, 
	SHOES, SHOES, _MASK, RED, RED, RED, RED, RED, _MASK, _MASK, _MASK, _MASK, _MASK, _MASK, _MASK, _MASK
};

const byte MARIO_JUMP_SIZE[2]  = {17, 16};


#endif